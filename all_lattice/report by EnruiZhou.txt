
原本计算平均观测值是在各种晶体对应的主程序里面完成。
计算平均值分两步：
1.计算所有状态的值；
2.根据所有状态的值计算该观测量及其幂在某个温度下的平均值。
我的思路是将1的计算函数放在各个类中，类中新增成员用于储存所有状态下的能量和动量，新增公有成员函数calculate用于计算，
再建立新的类observe用于完成2的计算，新类的成员q_aver,q2_aver,q4_aver用于存储观测量q及其幂的平均值，q用于存储所
有状态的q值，构造函数的参数包含输入的所有状态的q值（可以是动量m也可以是能量h）,成员函数aver_everytemper和aver_everylattice(int n)
用于计算q_aver,q2_aver,q4_aver和其他所需量的值，输入的n为电子数，这有助于计算不同晶格中观测量q的平均值关于电子数量
的平均值。
完成以上操作后，每个晶格对于的主程序，除了引用的文件不同，对象的类型不同，其他完全一致，且较为简洁，实现了一般意义的面向对象程序设计。

本人（周恩锐）完成了refactoring的代码工作。